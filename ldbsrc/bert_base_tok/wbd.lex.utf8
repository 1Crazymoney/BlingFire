#
# Default word-breaking rules, the dictionary of special words and tech-search
# tokenization rules are included
#

_include common/chu.fullunicode.def.txt

# previous contsin some errors --> _define WHITESPACE [\x0004-\x0020\x007F-\x009F\x00A0\x2000-\x200B\x200E\x200F\x202F\x205F\x2060\x2420\x2422\x2423\x2424\x3000\xFEFF\xFF02]
_define WHITESPACE [\x0004-\x0020\x007F-\x009F\x00A0\x2000-\x200B\x200E\x200F\x202F\x205F\x2060\x2420\x2424\x3000\xFEFF]
_define CURRENCY [\x0024\x0080\x00A2-\x00A5\x09F2\x09F3\x0E3F\x20A0\x20A2\x20A3\x20A4\x20A6-\x20AF]
_define CURRENCY_MINUS_EURO [\x0024\x0080\x00A2-\x00A5\x09F2\x09F3\x0E3F\x20A0\x20A2\x20A3\x20A4\x20A6-\x20AB\x20AD-\x20AF]
_define EURO_CURRENCY [\x20AC]
_define HYPHEN [\x002D\x2010\x2011]
_define MINUS [\x002D\x2012\x207B\x208B\x2212]
_define NUM [0-9]
_define NOT0NUM [1-9]

 # APOSTROPHE \x0027
 # GRAVE ACCENT \x0060
 # ACUTE ACCENT \x00B4
 # LEFT SINGLE QUOTATION MARK \x2018
 # RIGHT SINGLE QUOTATION MARK \x2019
_define APOSTROPHE [\x0027\x0060\x00B4\x2018\x2019]

 #
 # Define a regular letter
 #
_define LETTER (ChuLX|ChuMc|ChuMn|ChuMe|[&_])

 #
 # Regular Words (numbers and letters go together)
 #
< ((LETTER)|(ChuNX))+ > --> WORD _call FnTokWord

 #
 # Preserve punctuation
 #
< ChuPX | ChuSc | ChuSm | ChuSo > --> WORD _call FnTokWord
< CURRENCY > --> WORD _call FnTokWord
< [%] > --> WORD _call FnTokWord
< [HYPHEN] > --> WORD _call FnTokWord


 #
 # Special words are always preffered
 #
_define SpecWordDelim (WHITESPACE|ChuPX|ChuSm|ChuSc|ChuSk|ChuSo|ChuNX|$)

 #
 # Contractions
 #

 # no apostrophe
< [cC][aA][nN][nN][oO][tT] > SpecWordDelim --> _call FnSplitCannot
_function FnSplitCannot
  < ^ [cC][aA][nN] > --> WORD _call FnTokWord
  < [nN][oO][tT] $ > --> WORD _call FnTokWord
_end

 # not with apostrophe, e.g. shouldn't
_define CONTRACTIONS
(
    [Nn] APOSTROPHE [Tt]
)
_end

# words with contractions
< ((LETTER)|(ChuNX))+ CONTRACTIONS > SpecWordDelim --> _call FnSeparateContractions

_function FnSeparateContractions
  < ^ ((LETTER)|(ChuNX))+ > CONTRACTIONS --> WORD _call FnTokWord
  < CONTRACTIONS $ > --> WORD _call FnExceptionWord
_end



#
# BERT specific
#

< [\[] UNK [\]] > --> WORD _call FnTokWord
< [\[] CLS [\]] > --> WORD _call FnTokWord
< [\[] SEP [\]] > --> WORD _call FnTokWord
< [\[] MASK [\]] > --> WORD _call FnTokWord

_function FnTokWord
_include bert_base_tok/vocab.falex
_end

_function FnExceptionWord
# this is to guarantee the same tokens for "not" and "n't" , taken from the auto generated: < ^ [n][o][t] > --> WORD_ID_2025
< ^ [Nn] APOSTROPHE [Tt] > --> WORD_ID_2025
_end
